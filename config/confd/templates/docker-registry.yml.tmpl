version: 0.1
log:
  level: {{getenv "REGISTRY2_LOG_LEVEL" "error"}}
http:
  addr: :80
  host: https://{{getenv "REGISTRY2_HOST"}}
  secret: {{getenv "REGISTRY2_SECRETKEY"}}
  headers:
    X-Content-Type-Options: [nosniff]
{{if eq (getenv "REGISTRY2_DEBUG_ENABLED" "false") "true"}}
  debug:
    addr: :81
    prometheus:
      enabled: true
      path: /metrics
{{end}}

{{if eq (getenv "REGISTRY2_PROXY_ENABLED" "false") "true"}}
proxy:
  remoteurl: {{getenv "REGISTRY2_PROXY_REMOTE_URL" "https://registry-1.docker.io"}}
  username: {{getenv "REGISTRY2_PROXY_USERNAME"}}
  password: {{getenv "REGISTRY2_PROXY_PASSWORD"}}
{{else}}
auth:
  token:
    service: {{getenv "REGISTRY2_HOST"}}
    realm: {{getenv "REGISTRY2_TOKEN_AUTH_REALM"}}
    issuer: {{getenv "REGISTRY2_TOKEN_AUTH_ISSUER"}}
    rootcertbundle: /tmp/registry-tokenauth.crt
{{end}}

storage:
{{if eq (getenv "REGISTRY2_DISABLE_REDIRECT" "false") "true"}}
  redirect:
    disable: true
{{end}}
{{if eq (getenv "REGISTRY2_CACHE_ENABLED" "false") "true"}}
  cache:
    blobdescriptor: redis
{{end}}
{{if eq (getenv "REGISTRY2_PROXY_ENABLED" "false") "true"}}
  delete:
    enabled: true
{{end}}
{{if eq (getenv "REGISTRY2_DISABLE_UPLOAD_PURGING" "false") "true"}}
  maintenance:
    uploadpurging:
      enabled: false
{{end}}
{{if getenv "REGISTRY2_S3_BUCKET"}}
  s3:
    accesskey: {{getenv "REGISTRY2_S3_KEY"}}
    secretkey: {{getenv "REGISTRY2_S3_SECRET"}}
    region: {{getenv "COMMON_REGION"}}
{{if getenv "REGISTRY2_S3_REGION_ENDPOINT"}}
    regionendpoint: {{getenv "REGISTRY2_S3_REGION_ENDPOINT"}}
{{end}}
{{if eq (getenv "REGISTRY2_S3_DUALSTACK" "false") "true"}}
    usedualstack: true
{{end}}
    bucket: {{getenv "REGISTRY2_S3_BUCKET"}}
    encrypt: {{getenv "REGISTRY2_S3_ENCRYPT" "false"}}
    secure: true
    v4auth: true
    rootdirectory: {{getenv "REGISTRY2_STORAGEPATH"}}
    chunksize: 104857600
{{else}}
  filesystem:
    rootdirectory: {{getenv "REGISTRY2_STORAGEPATH"}}
{{end}}

{{if getenv "REGISTRY2_S3_CLOUDFRONT_ENDPOINT"}}
middleware:
  storage:
    - name: cloudfront
      options:
        ipfilteredby: aws
        baseurl: https://{{getenv "REGISTRY2_S3_CLOUDFRONT_ENDPOINT"}}/
        privatekey: /etc/ssl/private/cloudfront-pk.pem
        keypairid: {{getenv "REGISTRY2_S3_CLOUDFRONT_KEYPAIR_ID"}}
{{end}}

{{if eq (getenv "REGISTRY2_CACHE_ENABLED" "false") "true"}}
redis:
  addr: {{getenv "REGISTRY2_CACHE_ADDR" "127.0.0.1:6379"}}
  db: {{getenv "REGISTRY2_CACHE_DB" "0"}}
  pool:
    maxidle: {{getenv "REGISTRY2_CACHE_MAX_IDLE" "256"}}
    maxactive: {{getenv "REGISTRY2_CACHE_MAX_ACTIVE" "1024"}}
    idletimeout: {{getenv "REGISTRY2_CACHE_IDLE_TIMEOUT" "300s"}}
{{end}}
